<?php

namespace common\models;

use Yii;
use yii\db\Exception;
use yii\helpers\VarDumper;
use yii\web\UploadedFile;

/**
 * This is the model class for table "lehoi".
 *
 * @property int $id
 * @property string $TenLeHoi
 * @property string|null $Code
 * @property string $TomTat
 * @property string $NoiDungChiTiet
 * @property string $NgayBatDau
 * @property string $NgayKetThuc
 * @property string $AnhDaiDien
 * @property int $CapCongNhan_id
 * @property int $QuanHuyen_id
 * @property string|null $Title
 * @property string|null $Alt
 *
 * @property Baiviet[] $baiviets
 * @property CapCongNhan $capCongNhan
 * @property QuanHuyen $quanHuyen
 */
class LeHoi extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public $anh_dai_dien;
    public static function tableName()
    {
        return 'lehoi';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['TenLeHoi', 'TomTat', 'NgayBatDau', 'NgayKetThuc', 'CapCongNhan_id', 'QuanHuyen_id'], 'required','message'=>'{attribute} không được để trống'],
            [['TomTat', 'NoiDungChiTiet'], 'string'],
            [['NgayBatDau', 'NgayKetThuc'], 'safe'],
            [['CapCongNhan_id', 'QuanHuyen_id'], 'integer'],
            [['TenLeHoi', 'Code', 'AnhDaiDien'], 'string', 'max' => 250],
            [['Title', 'Alt'], 'string', 'max' => 200],
            [['anh_dai_dien'],'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'TenLeHoi' => 'Tên lễ hội',
            'Code' => 'Code',
            'TomTat' => 'Tóm tắt',
            'NoiDungChiTiet' => 'Nội dung chi tiết',
            'NgayBatDau' => 'Ngày bắt đầu',
            'NgayKetThuc' => 'Ngày kết thúc',
            'AnhDaiDien' => 'Ảnh đại diện',
            'anh_dai_dien' => 'Ảnh đại diện',
            'CapCongNhan_id' => 'Cấp công nhận',
            'QuanHuyen_id' => 'Quận huyện',
            'Title' => 'Title của ảnh đại diện',
            'Alt' => 'Alt của ảnh đại diện',
        ];
    }
    public function getCapCongNhan()
    {
        return $this->hasOne(CapCongNhan::className(), ['id' => 'CapCongNhan_id']);
    }
    /**
     * Gets query for [[Baiviets]].
     *
     * @return \yii\db\ActiveQuery
     */

    public function getQuanHuyen()
    {
        return $this->hasOne(QuanHuyen::className(), ['id' => 'QuanHuyen_id']);
    }
    public function getBaiviets()
    {
        return $this->hasMany(BaiViet::className(), ['LeHoi_id' => 'id']);
    }
    public function beforeSave($insert)
    {
        $this->TenLeHoi=trim($this->TenLeHoi);
        $this->Code=API_H17::createCode($this->TenLeHoi);
        $anhdaidien=UploadedFile::getInstance($this,'anh_dai_dien');
        if($anhdaidien!=null) {
            if (!$insert) {
                $lehoi_old = NhanVatLichSu::findOne($this->id);
                try {
                    $path = dirname(dirname(__DIR__)) . '/images/anhdaidien/' . $lehoi_old->AnhDaiDien;
                    if (is_file($path)) unlink($path);
                } catch (Exception $ex) {
                }
            }
            $file_type = API_H17::GetImageType($anhdaidien->type);
            $filename = $this->Code . time() . $file_type;
            if (strlen($filename) > 200) $filename = substr($filename, strlen($filename) - 200);
            $path = dirname(dirname(__DIR__)) . '/images/anhdaidien/' . $filename;
            $anhdaidien->saveAs($path);
            if (strpos(strtolower($file_type), 'jpg') || strpos(strtolower($file_type), 'jpeg')) {
                $image = API_H17::cropImageJPG($path, 1080, 800);
                imagejpeg($image, $path);
            } elseif (strpos(strtolower($file_type), 'png')) {
                $image = API_H17::cropImagePNG($path, 1080, 800);
                imagepng($image, $path);
            }
            $this->AnhDaiDien = $filename;
            if (trim($this->Title) == '') $this->Title = $this->TenNhanVatLichSu;
            if (trim($this->Alt) == '') $this->Alt = $this->TenNhanVatLichSu;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function beforeDelete()
    {
        yii::$app->session->setFlash('lehoi_delete_anhdaidien',$this->AnhDaiDien);
        BaiViet::deleteAll(['LeHoi_id'=>$this->id]);
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
    public function afterDelete()
    {
        $filename=yii::$app->session->getFlash('lehoi_delete_anhdaidien');
        yii::$app->session->removeFlash('lehoi_delete_anhdaidien');
        $path=dirname(dirname(__DIR__)) . '/images/anhdaidien/' . $filename;
        if(is_file($path)) unlink($path);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
