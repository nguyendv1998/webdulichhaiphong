<?php

namespace common\models;

use Yii;
use yii\db\Exception;
use yii\helpers\VarDumper;
use yii\web\UploadedFile;

/**
 * This is the model class for table "nhanvatlichsu".
 *
 * @property int $id
 * @property string|null $TenNhanVatLichSu
 * @property string|null $Code
 * @property string|null $MoTa
 * @property string|null $AnhDaiDien
 * @property string|null $Title
 * @property string|null $Alt
 *
 * @property BaiViet[] $baiviets
 * @property DiaDanh[] $diadanhs
 */
class NhanVatLichSu extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public $anh_dai_dien;
    public static function tableName()
    {
        return 'nhanvatlichsu';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['MoTa'], 'string'],
            [['TenNhanVatLichSu', 'Code', 'AnhDaiDien'], 'string', 'max' => 250],
            [['Title', 'Alt'], 'string', 'max' => 200],
            [['TenNhanVatLichSu',], 'required', 'message'=>'Tên nhân vật lịch sử không được để trống!'],
            //[['MoTa'], 'required', 'message'=>'Mô tả không được để trống!'],
            [['anh_dai_dien'],'safe']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'TenNhanVatLichSu' => 'Tên nhân vật lịch sử',
            'Code' => 'Code',
            'MoTa' => 'Mô tả',
            'AnhDaiDien' => 'Ảnh đại diện',
            'anh_dai_dien' => 'Ảnh đại diện',
            'Title' => 'Title của ảnh đại diện',
            'Alt' => 'Alt của ảnh đại diện',
        ];
    }

    /**
     * Gets query for [[Baiviets]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getBaiviets()
    {
        return $this->hasMany(BaiViet::className(), ['NhanVatLichSu_id' => 'id']);
    }

    /**
     * Gets query for [[Diadanhs]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getDiadanhs()
    {
        return $this->hasMany(DiaDanh::className(), ['NhanVatLichSu_id' => 'id']);
    }
    public function beforeSave($insert)
    {
        $this->TenNhanVatLichSu=trim($this->TenNhanVatLichSu);
        $this->Code=API_H17::createCode($this->TenNhanVatLichSu);
        $anhdaidien=UploadedFile::getInstance($this,'anh_dai_dien');
        if($anhdaidien!=null){
            if(!$insert){
                $nhanvatlichsu_old=NhanVatLichSu::findOne($this->id);
                try {
                    $path=dirname(dirname(__DIR__)) . '/images/anhdaidien/' . $nhanvatlichsu_old->AnhDaiDien;
                    if(is_file($path)) unlink($path);
                }
                catch (Exception $ex){}
            }
            $file_type=API_H17::GetImageType($anhdaidien->type);
            $filename=$this->Code.time().$file_type;
            if(strlen($filename)>200) $filename = substr($filename,strlen($filename) - 200);
            $path=dirname(dirname(__DIR__)) . '/images/anhdaidien/' . $filename;
            $anhdaidien->saveAs($path);
            if(strpos(strtolower($file_type),'jpg')||strpos(strtolower($file_type),'jpeg')){
                $image=API_H17::cropImageJPG($path,1080,800);
                imagejpeg($image, $path);
            }
            elseif (strpos(strtolower($file_type),'png')){
                $image=API_H17::cropImagePNG($path,1080,800);
                imagepng($image,$path);
            }
            $this->AnhDaiDien=$filename;
            if(trim($this->Title)=='')  $this->Title=$this->TenNhanVatLichSu;
            if(trim($this->Alt)=='')  $this->Alt=$this->TenNhanVatLichSu;
        }
        //VarDumper::dump($this->attributes,10,true);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function beforeDelete()
    {
        BaiViet::deleteAll(['NhanVatLichSu_id' => 'id']);
        DiaDanh::deleteAll(['NhanVatLichSu_id' => 'id']);
        yii::$app->session->setFlash('nhanvatlichsu_delete_anhdaidien',$this->AnhDaiDien);
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
    public function afterDelete()
    {
        $filename=yii::$app->session->getFlash('nhanvatlichsu_delete_anhdaidien');
        yii::$app->session->removeFlash('nhanvatlichsu_delete_anhdaidien');
        $path=dirname(dirname(__DIR__)) . '/images/anhdaidien/' . $filename;
        if(is_file($path)) unlink($path);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
